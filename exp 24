#include <stdio.h>
#include <stdlib.h>
#include <fcntl.h>
#include <unistd.h>

#define BUFFER_SIZE 100

int main() {
    int fileDescriptor;
    ssize_t bytesRead, bytesWritten;
    char buffer[BUFFER_SIZE];

    // 1. Create a new file
    fileDescriptor = creat("example_file.txt", 0644);

    if (fileDescriptor == -1) {
        perror("Error creating file");
        exit(EXIT_FAILURE);
    }

    printf("File created successfully.\n");

    // 2. Write data to the file
    const char *dataToWrite = "Hello, this is a demonstration of UNIX system calls for file management.";

    bytesWritten = write(fileDescriptor, dataToWrite, strlen(dataToWrite));

    if (bytesWritten == -1) {
        perror("Error writing to file");
        close(fileDescriptor);
        exit(EXIT_FAILURE);
    }

    printf("Data written to file successfully.\n");

    // 3. Read data from the file
    lseek(fileDescriptor, 0, SEEK_SET); // Move the file cursor to the beginning

    bytesRead = read(fileDescriptor, buffer, sizeof(buffer));

    if (bytesRead == -1) {
        perror("Error reading from file");
        close(fileDescriptor);
        exit(EXIT_FAILURE);
    }

    buffer[bytesRead] = '\0'; // Null-terminate the string

    printf("Data read from file:\n%s\n", buffer);

    // 4. Close the file
    close(fileDescriptor);

    printf("File closed successfully.\n");

    return 0;
}
